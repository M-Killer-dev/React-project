const path = require('path');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');

// PostCSS plugins
const cssnext = require('postcss-cssnext');
const postcssFocus = require('postcss-focus');
const postcssReporter = require('postcss-reporter');

module.exports = require('./webpack.base.babel')({
  // Add hot reloading in development
  entry: [
    'webpack-dev-server/client?http://localhost:3000', // Needed for hot reloading
    'webpack/hot/only-dev-server', // See above
    path.join(__dirname, '..', 'app/app.js') // Start with js/app.js...
  ],
  // Load the CSS in a style tag
  cssLoaders: 'style-loader!css-loader?modules&importLoaders=1&sourceMap!postcss-loader',
  // Process the CSS with PostCSS
  postcssPlugins: [
    postcssFocus(), // Add a :focus to every :hover
    cssnext({ // Allow future CSS features to be used, also auto-prefixes the CSS...
      browsers: ['last 2 versions', 'IE > 10'] // ...based on this browser list
    }),
    postcssReporter({ // Posts messages from plugins to the terminal
      clearMessages: true
    })
  ],
  // Add hot reloading
  plugins: [
    new webpack.HotModuleReplacementPlugin(), // Tell webpack we want to hot reload
    new HtmlWebpackPlugin({
      template: 'app/index.html', // Move the index.html file
      inject: true // inject all files that are generated by webpack, e.g. bundle.js
    })
  ],
  // Tell babel that we want to hot-reload
  query: {
    plugins: [
      ['react-transform', {
        transforms: [{
          transform: 'react-transform-hmr',
          imports: ['react'],
          locals: ['module']
        }]
      }]
    ]
  }
});
